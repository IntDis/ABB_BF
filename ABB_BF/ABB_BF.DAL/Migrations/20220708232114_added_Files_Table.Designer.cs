// <auto-generated />
using System;
using ABB_BF.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ABB_BF.DAL.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220708232114_added_Files_Table")]
    partial class added_Files_Table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ABB_BF.DAL.Entities.AbstractCommonData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Secondname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AbstractCommonData");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AbstractCommonData");
                });

            modelBuilder.Entity("ABB_BF.DAL.Entities.FormFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProbationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("ProbationId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("ABB_BF.DAL.Entities.Grant", b =>
                {
                    b.HasBaseType("ABB_BF.DAL.Entities.AbstractCommonData");

                    b.Property<float>("AverageMarks")
                        .HasColumnType("real");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("College")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Course")
                        .HasColumnType("int");

                    b.Property<string>("EducationForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherGrants")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Grant");
                });

            modelBuilder.Entity("ABB_BF.DAL.Entities.Practice", b =>
                {
                    b.HasBaseType("ABB_BF.DAL.Entities.AbstractCommonData");

                    b.Property<string>("AboutMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("AverageMarks")
                        .HasColumnType("real")
                        .HasColumnName("Practice_AverageMarks");

                    b.Property<string>("College")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Practice_College");

                    b.Property<int>("Course")
                        .HasColumnType("int")
                        .HasColumnName("Practice_Course");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Practice_Speciality");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Practice");
                });

            modelBuilder.Entity("ABB_BF.DAL.Entities.Probation", b =>
                {
                    b.HasBaseType("ABB_BF.DAL.Entities.AbstractCommonData");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Probation_StartDate");

                    b.HasDiscriminator().HasValue("Probation");
                });

            modelBuilder.Entity("ABB_BF.DAL.Entities.UniversityForm", b =>
                {
                    b.HasBaseType("ABB_BF.DAL.Entities.AbstractCommonData");

                    b.HasDiscriminator().HasValue("UniversityForm");
                });

            modelBuilder.Entity("ABB_BF.DAL.Entities.FormFile", b =>
                {
                    b.HasOne("ABB_BF.DAL.Entities.AbstractCommonData", "Form")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ABB_BF.DAL.Entities.Probation", null)
                        .WithMany("Files")
                        .HasForeignKey("ProbationId");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("ABB_BF.DAL.Entities.Probation", b =>
                {
                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
